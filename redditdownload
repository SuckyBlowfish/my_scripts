#!/usr/bin/env python
import sys,json,urllib2,re,os,

#if (len(sys.argv) == 2):
#    subreddit = sys.argv[1]
#    rdata = json.loads(
#        urllib2.urlopen(
#            "http://www.reddit.com/r/"+subreddit+"/.json"
#        ).read()
#    )['data']
#    subreddit_dir=os.path.join(os.getcwd(),subreddit)
#    if not os.path.isdir(subreddit_dir):
#        os.mkdir(subreddit_dir)
#    for child in rdata['children']:
#        if not child['data']['is_self']:
#            child_id = child['data']['id']
#            child_url = child['data']['url']
#            r=re.search(r'\.((png)|(jpg)|(gif))$',child_url)
#            if r:
#                if child['data']['over_18']:
#                    local_file = os.path.join(subreddit_dir,
#                                              '.'+child_id+r.group())
#                else:
#                    local_file = os.path.join(subreddit_dir,
#                                              child_id+r.group())
#                if not os.path.exists(local_file):
#                    try:
#                        with open(local_file,'w') as f:
#                            f.write(urllib2.urlopen(child_url).read())
#                    except IOError:
#                        print "Error or some crap!"
#else:
#    print "Need to specify subreddit to farm"

def main():
    parser = OptionParser(usage="usage: %prog [options] subreddit",
                              version="%prog 0.2")
    parser.add_option("-s","--subreddit",
                      action="store",
                      dest="subreddit",
                      help="Subreddit to farm")
    
    parser.add_option("-p","--pictures",
                      action="store_true",
                      dest="pictures",
                      help="Download pictures from the subreddit")
        
    parser.add_option("-P","--no-pictures",
                      action="store_false",
                      dest="pictures",
                      help="Do not download pictures from the subreddit")
            
    (options, args) = parser.parse_args()

    
        
                     

if __name__ == "__main__" :
    main()
